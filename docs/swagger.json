{
    "swagger": "2.0",
    "info": {
        "description": "This is the API documentation for the services.",
        "title": "House of neural networks API",
        "contact": {},
        "version": "1.0"
    },
    "host": "localhost:80",
    "basePath": "/",
    "paths": {
        "/chat/{model_id}": {
            "get": {
                "security": [
                    {
                        "TokenAuth": []
                    }
                ],
                "description": "This endpoint retrieves all messages associated with a specific model ID and user ID.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Message service"
                ],
                "summary": "Get messages",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Model ID",
                        "name": "model_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of messages",
                        "schema": {
                            "$ref": "#/definitions/models.GetMessagesResponse"
                        }
                    }
                }
            }
        },
        "/chat/{model_id}/{version_id}": {
            "post": {
                "security": [
                    {
                        "TokenAuth": []
                    }
                ],
                "description": "This endpoint allows a user to send a request to a specific model identified by its ID and receive a response.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Message service"
                ],
                "summary": "Send a message to a model",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Model ID",
                        "name": "model_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Version ID of model",
                        "name": "version_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Request to model",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.SendMessageRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Response from the model",
                        "schema": {
                            "$ref": "#/definitions/models.SendMessageResponse"
                        }
                    }
                }
            }
        },
        "/login": {
            "post": {
                "description": "Авторизует пользователей",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth service"
                ],
                "summary": "Авторизация пользователя",
                "parameters": [
                    {
                        "description": "LogIn data",
                        "name": "register",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.LogInRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.LogInResponse"
                        }
                    }
                }
            }
        },
        "/models": {
            "get": {
                "security": [
                    {
                        "TokenAuth": []
                    }
                ],
                "description": "Возвращает список моделей, связанных с пользователем",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Model service"
                ],
                "summary": "Получение списка моделей",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ListModelsResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "TokenAuth": []
                    }
                ],
                "description": "This endpoint allows the user to upload a model file with a name and a file. It expects a multipart form with fields \"name\" and \"file\".",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Model service"
                ],
                "summary": "Upload a model to the service",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Name of the model",
                        "name": "name",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "Config file",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Model upload successful",
                        "schema": {
                            "$ref": "#/definitions/models.UploadModelResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "TokenAuth": []
                    }
                ],
                "description": "This endpoint allows the user to unload a model from the service by providing the model ID in the request body.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Model service"
                ],
                "summary": "Unload a model",
                "parameters": [
                    {
                        "description": "Unload model request body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.UnloadModelRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Model unload successful",
                        "schema": {
                            "$ref": "#/definitions/models.UnloadModelResponse"
                        }
                    }
                }
            }
        },
        "/models/version": {
            "post": {
                "security": [
                    {
                        "TokenAuth": []
                    }
                ],
                "description": "This endpoint allows the user to upload a new version of an existing model. The request includes version number, model ID, and one or more files.",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Model service"
                ],
                "summary": "Upload a new version of a model",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Version number of the model",
                        "name": "version",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "ID of the model",
                        "name": "model_id",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "Files for the new version model",
                        "name": "files",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Version upload successful",
                        "schema": {
                            "$ref": "#/definitions/models.UploadVersionResponse"
                        }
                    }
                }
            }
        },
        "/models/{id}": {
            "get": {
                "security": [
                    {
                        "TokenAuth": []
                    }
                ],
                "description": "Возвращает данные о модели по ее идентификатору",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Model service"
                ],
                "summary": "Получение модели",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Идентификатор модели",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.GetModelResponse"
                        }
                    }
                }
            }
        },
        "/signup": {
            "post": {
                "description": "Регистрирует новых пользователей",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth service"
                ],
                "summary": "Регистрация пользователя",
                "parameters": [
                    {
                        "description": "SignUp data",
                        "name": "register",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.SignUpRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.SignUpResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.GetMessagesResponse": {
            "type": "object",
            "properties": {
                "messages": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Message"
                    }
                }
            }
        },
        "models.GetModelResponse": {
            "type": "object",
            "properties": {
                "model": {
                    "$ref": "#/definitions/models.Model"
                }
            }
        },
        "models.ListModelsResponse": {
            "type": "object",
            "properties": {
                "models": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Model"
                    }
                }
            }
        },
        "models.LogInRequest": {
            "type": "object",
            "properties": {
                "password": {
                    "type": "string",
                    "example": "securepassword123"
                },
                "username": {
                    "type": "string",
                    "example": "john_doe"
                }
            }
        },
        "models.LogInResponse": {
            "type": "object",
            "properties": {
                "jwt": {
                    "type": "string"
                },
                "userId": {
                    "type": "integer"
                }
            }
        },
        "models.Message": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "input1": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "input2": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "modelID": {
                    "type": "integer"
                },
                "results": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "userID": {
                    "type": "integer"
                },
                "versionID": {
                    "type": "integer"
                }
            }
        },
        "models.Model": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                },
                "versions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Version"
                    }
                }
            }
        },
        "models.SendMessageRequest": {
            "type": "object",
            "properties": {
                "input1": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "example": [
                        0,
                        1,
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        8,
                        9,
                        10,
                        11,
                        12,
                        13,
                        14,
                        15
                    ]
                },
                "input2": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "example": [
                        1,
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        8,
                        9,
                        10,
                        11,
                        12,
                        13,
                        14,
                        15,
                        16
                    ]
                }
            }
        },
        "models.SendMessageResponse": {
            "type": "object",
            "properties": {
                "results": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "1 + 1 = 2",
                        "1 - 1 = 0"
                    ]
                }
            }
        },
        "models.SignUpRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string",
                    "example": "john@example.com"
                },
                "password": {
                    "type": "string",
                    "example": "securepassword123"
                },
                "username": {
                    "type": "string",
                    "example": "john_doe"
                }
            }
        },
        "models.SignUpResponse": {
            "type": "object",
            "properties": {
                "success": {
                    "type": "boolean"
                }
            }
        },
        "models.UnloadModelRequest": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                }
            }
        },
        "models.UnloadModelResponse": {
            "type": "object",
            "properties": {
                "success": {
                    "type": "boolean"
                }
            }
        },
        "models.UploadModelResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                }
            }
        },
        "models.UploadVersionResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                }
            }
        },
        "models.Version": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "model_id": {
                    "type": "integer"
                },
                "number": {
                    "type": "integer"
                }
            }
        }
    }
}